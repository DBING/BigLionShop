<?php

namespace frontend\controllers;

use common\models\OrderInfo;
use common\models\PayLog;
use frontend\components\AjaxReturn;
use frontend\models\Cart;
use frontend\models\Payment;
use frontend\models\Region;
use frontend\models\UserAddress;
use yii;
use common\models\Category;

class OrderController extends \yii\web\Controller
{

    public $userId;
    public $layout = 'navmain';

    public function init()
    {
        // 验证是否登录
        if(Yii::$app->user->isGuest)
        {
            return $this->goBack();
        }
        $this->userId = Yii::$app->user->getId();
    }

    public function behaviors()
    {

        // 查询主导航
        $navigation = Category::getNavigation();
        $this->view->params['navigation'] = $navigation;

        return parent::behaviors(); // TODO: Change the autogenerated stub

    }

    /**
     * 下单
     * @return string
     */
    public function actionCheckout()
    {

        // 判断是否有收货地址
        if(!$address = UserAddress::getAddress($this->userId))
        {
            yii::$app->response->redirect(['order/consignee']);
        }


        // 查询购物车商品
        $cart = Cart::getCartList();
        if(count($cart['goodsList']) == 0)
        {
            $this->goBack();
        }

        // 查询支付方式
        $paies = Payment::getPay();

        return $this->render('checkout',['address'=>$address,'cart'=>$cart,'paies'=>$paies]);
    }

    /**
     * 填写收货信息
     *
     * @return string
     */
    public function actionConsignee()
    {
        $model = new UserAddress();
        if(yii::$app->request->isPost)
        {
            $model->user_id = $this->userId;
            if($model->load(yii::$app->request->post()) && $model->validate())
            {
                $result = $model->save();
                if($result)
                {
                    yii::$app->response->redirect(['order/checkout']);
                }
                else
                {
                    Yii::$app->session->setFlash('error','save faill');

                }
            }
            else
            {
                Yii::$app->session->setFlash('error','validate faill');
            }
        }

        $region = Region::getDropDownRegion();
        return $this->render('consignee',['userAdd'=>$model,'region'=>$region]);
    }


    /**
     * 下单
     */
    public function actionOrderDown()
    {
        $aid = Yii::$app->request->get('aid');
        $pid = Yii::$app->request->get('pid');
        $orderInfo = [];

        // 支付方式
        $pay = Payment::getPayInfo($pid);

        // 选中的收获地址
        $address = UserAddress::getInfo($aid);

        // 订单商品与金额
        $cart = Cart::getCartList();

        // 生产订单号
        $orderInfo['order_sn'] = OrderInfo::createOrderSn();

        // 下单
        $result = (new OrderInfo)->createOrder(array_merge($orderInfo,$address,$cart,$pay));

        // 清除购物车
        Cart::clearAll();

        // 响应
        $result->send();
    }

    public function actionRegion()
    {
        $rid = intval(Yii::$app->request->get('rid'));
        if($rid)
        {
            $region = Region::getDropDownRegion($rid);
            (new AjaxReturn(AjaxReturn::SUCCESS,'OK',$region))->send();

        }
        (new AjaxReturn(AjaxReturn::ERROR,'参数有误'))->send();

    }

    public function actionAlipay()
    {

        $payUrl = Yii::$app->alipay->compose('go pay')->payUrl(time() . rand(10000,99999),'必应商城订单',0.01,'买了一个栗子');
        var_dump($payUrl);
        echo $payUrl;

    }

    /**
     *  同步地址处理
     */
    public function actionReturn()
    {
        $get = Yii::$app->request->get();
        // 验签
        $result = Yii::$app->alipay->verifyReturn();
        if($result)
        {
            // 记录支付日志
            PayLog::write('R',$get['out_trade_no'],$get);

            if($get['trade_status'] == 'TRADE_SUCCESS' || $get['trade_status'] == 'TRADE_FINISHED')
            {
                // 判断该笔订单是否已经处理过
                if(OrderInfo::updateOrder($get['out_trade_no'],$get['total_fee']))
                {
                    Yii::$app->session->setFlash('alert',(new AjaxReturn(AjaxReturn::SUCCESS,'恭喜您支付成功，订单：'.$get['out_trade_no'].'！'))->returned());
                }
                else
                {
                    Yii::$app->session->setFlash('alert',(new AjaxReturn(AjaxReturn::ERROR,'订单状态处理异常，请联系客服.'))->returned());
                }

            }
            else
            {
                Yii::$app->session->setFlash('alert',(new AjaxReturn(AjaxReturn::ERROR,'订单支付失败,订单号：'.$get['out_trade_no']))->returned());
            }
        }
        else
        {
            Yii::$app->session->setFlash('alert',(new AjaxReturn(AjaxReturn::ERROR,'签名校验失败，订单支付失败,订单号：'.$get['out_trade_no']))->returned());

        }
        Yii::$app->response->redirect(['user/my-order']);

    }


    /**
     * 异步通知处理
     */
    public function actionNotify()
    {
        $post = Yii::$app->request->post();
        // 验签
        if(Yii::$app->alipay->verifyNotify())
        {
            // 记录支付日志
            PayLog::write('N',$post['out_trade_no'],$post);

            // 判断该笔订单是否已经处理过
            if(OrderInfo::updateOrder($post['out_trade_no'],$post['total_fee']))
            {
                echo 'success';
            }
            else
            {
                echo 'fail';
            }

        }
        else
        {
            echo 'fail';
        }
    }
}
